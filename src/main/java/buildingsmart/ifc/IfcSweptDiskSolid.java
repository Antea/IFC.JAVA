/*
 * Copyright (C) 2019 Pieter Pauwels, Ghent University
 * Modifications Copyright (C) 2020 Giovanni Velludo
 *
 * This file is part of IFC.JAVA.
 *
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 *     http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 */

package buildingsmart.ifc;

import buildingsmart.io.Attribute;
import lombok.EqualsAndHashCode;
import lombok.NonNull;
import lombok.ToString;

/**
 * A swept disk solid is the solid produced by sweeping a circular disk along a
 * three dimensional curve. During the sweeping operation the normal to the
 * plane of the circular disk is in the direction of the tangent to the
 * directrix curve and the center of the disk lies on the directrix. The
 * circular disk may, optionally, have a central hole, in this case the
 * resulting solid has a through hole, or, an internal void when the directrix
 * forms a close curve.
 */
@EqualsAndHashCode(callSuper = false)
@ToString
public class IfcSweptDiskSolid extends IfcSolidModel {
    @Attribute(0)
    private final IfcCurve directrix;
    @Attribute(1)
    private final IfcPositiveLengthMeasure radius;
    @Attribute(2)
    private final IfcPositiveLengthMeasure innerRadius;
    @Attribute(3)
    private final IfcParameterValue startParam;
    @Attribute(4)
    private final IfcParameterValue endParam;

    /**
     * @param directrix   The curve used to define the sweeping operation. The
     *                    solid is generated by sweeping a circular disk along
     *                    the directrix.
     * @param radius      The radius of the circular disk to be swept along the
     *                    directrix.
     * @param innerRadius This attribute is optional, if present it defines the
     *                    radius of a circular hole in the centre of the disk.
     * @param startParam  The parameter value on the directrix at which the
     *                    sweeping operation commences.
     * @param endParam    The parameter value on the directrix at which the
     *                    sweeping operation ends.
     * @throws NullPointerException If any of the arguments (except for {@code
     *                              innerRadius}) are null.
     */
    public IfcSweptDiskSolid(@NonNull IfcCurve directrix,
                             @NonNull IfcPositiveLengthMeasure radius,
                             IfcPositiveLengthMeasure innerRadius,
                             @NonNull IfcParameterValue startParam,
                             @NonNull IfcParameterValue endParam) {
        if (directrix.getDim().getValue() != 3) {
            throw new IllegalArgumentException(
                    "directrix must be a curve in three-dimensional space");
        }
        if (innerRadius != null &&
                innerRadius.getValue() >= radius.getValue()) {
            throw new IllegalArgumentException(
                    "if innerRadius is not null it must be smaller than " +
                            "radius");
        }
        this.directrix = directrix;
        this.radius = radius;
        this.innerRadius = innerRadius;
        this.startParam = startParam;
        this.endParam = endParam;
    }
}
